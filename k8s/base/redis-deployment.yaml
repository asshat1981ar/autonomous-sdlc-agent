apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: sdlc-agent
  labels:
    app.kubernetes.io/name: autonomous-sdlc-agent
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: autonomous-sdlc-agent
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: autonomous-sdlc-agent
        app.kubernetes.io/component: redis
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - "allkeys-lru"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: redis-data
          mountPath: /data
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: sdlc-agent
  labels:
    app.kubernetes.io/name: autonomous-sdlc-agent
    app.kubernetes.io/component: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: autonomous-sdlc-agent
    app.kubernetes.io/component: redis

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: sdlc-agent
  labels:
    app.kubernetes.io/name: autonomous-sdlc-agent
    app.kubernetes.io/component: redis-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2