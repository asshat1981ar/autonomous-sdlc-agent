apiVersion: v1
kind: ConfigMap
metadata:
  name: sdlc-config
  namespace: sdlc-agent
  labels:
    app.kubernetes.io/name: autonomous-sdlc-agent
    app.kubernetes.io/component: config
data:
  # Backend configuration
  FLASK_ENV: "production"
  PYTHONPATH: "/app"
  DATABASE_URL: "sqlite:///app/database/app.db"
  
  # Frontend configuration
  REACT_APP_API_URL: "http://backend:5000"
  REACT_APP_ENVIRONMENT: "production"
  
  # Logging configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  
  # Redis configuration
  REDIS_URL: "redis://redis:6379/0"
  
  # Session configuration
  SESSION_TIMEOUT: "3600"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: sdlc-agent
  labels:
    app.kubernetes.io/name: autonomous-sdlc-agent
    app.kubernetes.io/component: nginx-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/geo+json
            application/javascript
            application/x-javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rdf+xml
            application/rss+xml
            application/xhtml+xml
            application/xml
            font/eot
            font/otf
            font/ttf
            image/svg+xml
            text/css
            text/javascript
            text/plain
            text/xml;
        
        server {
            listen 80;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;
            
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            location /api/ {
                proxy_pass http://backend:5000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }