{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sdlc-agent.fullname" . }}-backend
  labels:
    {{- include "sdlc-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "sdlc-agent.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.backend.service.port }}"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "sdlc-agent.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.security.securityContext | nindent 8 }}
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "sdlc-agent.fullname" . }}-config
            - secretRef:
                name: {{ include "sdlc-agent.fullname" . }}-secret
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.backend.persistence.database.enabled }}
            - name: database-storage
              mountPath: /app/database
            {{- end }}
            {{- if .Values.backend.persistence.logs.enabled }}
            - name: logs-storage
              mountPath: /app/logs
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        {{- if .Values.backend.persistence.database.enabled }}
        - name: database-storage
          persistentVolumeClaim:
            claimName: {{ include "sdlc-agent.fullname" . }}-backend-database
        {{- end }}
        {{- if .Values.backend.persistence.logs.enabled }}
        - name: logs-storage
          persistentVolumeClaim:
            claimName: {{ include "sdlc-agent.fullname" . }}-backend-logs
        {{- end }}
{{- end }}