# Default values for sdlc-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  imageRegistry: ghcr.io
  imagePullSecrets:
    - name: ghcr-secret

# Application configuration
app:
  name: autonomous-sdlc-agent
  version: "1.0.0"

# Backend configuration
backend:
  enabled: true
  replicaCount: 3
  
  image:
    repository: ghcr.io/asshat1981ar/autonomous-sdlc-agent/backend
    tag: "latest"
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000
  
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  persistence:
    database:
      enabled: true
      size: 10Gi
      storageClass: "gp2"
      accessMode: ReadWriteOnce
    logs:
      enabled: true
      size: 5Gi
      storageClass: "gp2"
      accessMode: ReadWriteOnce
  
  env:
    FLASK_ENV: "production"
    PYTHONPATH: "/app"
    LOG_LEVEL: "INFO"
  
  secrets:
    GEMINI_API_KEY: ""
    ANTHROPIC_API_KEY: ""
    OPENAI_API_KEY: ""
    BLACKBOX_API_KEY: ""
    SECRET_KEY: ""

# Frontend configuration
frontend:
  enabled: true
  replicaCount: 2
  
  image:
    repository: ghcr.io/asshat1981ar/autonomous-sdlc-agent/frontend
    tag: "latest"
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

# Redis configuration
redis:
  enabled: true
  replicaCount: 1
  
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 6379
    targetPort: 6379
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  persistence:
    enabled: true
    size: 5Gi
    storageClass: "gp2"
    accessMode: ReadWriteOnce

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  
  hosts:
    - host: sdlc-agent.example.com
      paths:
        - path: /api
          pathType: Prefix
          service: backend
        - path: /
          pathType: Prefix
          service: frontend
  
  tls:
    - secretName: sdlc-tls-secret
      hosts:
        - sdlc-agent.example.com

# Security configuration
security:
  networkPolicy:
    enabled: true
  
  podSecurityPolicy:
    enabled: true
  
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001

# Monitoring configuration
monitoring:
  enabled: true
  
  prometheus:
    enabled: true
    port: 9090
    scrapeInterval: 30s
  
  grafana:
    enabled: true
    port: 3000
  
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics

# Database configuration (optional PostgreSQL)
postgresql:
  enabled: false
  auth:
    postgresPassword: "postgres"
    username: "sdlc_user"
    password: "sdlc_password"
    database: "sdlc_agent"
  
  primary:
    persistence:
      enabled: true
      size: 20Gi

# Backup configuration
backup:
  enabled: false
  schedule: "0 2 * * *"
  retention: "7d"
  storage:
    size: 50Gi
    storageClass: "gp2"

# Development settings
development:
  debug: false
  hotReload: false

# Production settings
production:
  replicas:
    backend: 3
    frontend: 2
  
  resources:
    backend:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    frontend:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 400m
        memory: 512Mi